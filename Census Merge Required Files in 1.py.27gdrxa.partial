#!/usr/bin/env python
# coding: utf-8

# In[1]:


#merge/join files

import os
import pandas as pd
import numpy as np
import glob
os.chdir(r'D:\Backup\IAG\Non Billable Work\Census\General Community Profile\2016 Census GCP All Geographies for AUST\SA1\51-59')

folder = os.listdir(r'D:\Backup\IAG\Non Billable Work\Census\General Community Profile\2016 Census GCP All Geographies for AUST\SA1\51-59')

#extension = 'csv'
#all_filenames = [i for i in glob.glob('*.{}'.format(extension))]


#combine all files in the list
#combined_csv = pd.concat([pd.read_csv(f) for f in all_filenames ])
#export to csv
#combined_csv.to_csv( "combined_csv.csv", index=False, encoding='utf-8-sig')

i = 0
merged_file = pd.read_excel(r'D:\Backup\Padhai\Python\SA1_join_columns.xlsx')

for file in folder:
    if i < len(folder):
        input_df = pd.read_csv(file)
        merged_file = pd.merge(merged_file, input_df, on = ['SA1_7DIGITCODE_2016','State','SA2_code','SA1_code','Census_Name_2016'])
        i=i+1
        print(i,"file merged")

print("All file merged")
print(merged_file.describe())

merged_file.to_csv("merged.csv")


# In[36]:


df_list = []
i = 0
for file in folder:
    if i<3:
        input_name = 'df_'+i
         = pd.read_csv(file)
        
        df_list.append('df'+i)
    i = i+1


# In[2]:


merged_file.info()


# In[4]:


sample_data = merged_file.head(10)


# In[5]:


sample_data.to_csv("sample.csv")


# ## Below is test code to check merging of files

# In[6]:


processed_df = pd.read_excel(r'D:\Backup\Padhai\Python\Join_sample.xlsx',sheet_name= 'Sheet3')


# In[7]:


processed_df.head()


# In[13]:


input1 = pd.read_excel(r'D:\Backup\Padhai\Python\Join_sample.xlsx',sheet_name= 'Sheet1')
input2 = pd.read_excel(r'D:\Backup\Padhai\Python\Join_sample.xlsx',sheet_name= 'Sheet2')


# In[14]:


input1.head()


# In[15]:


input2.head()


# In[17]:


processed_df = pd.merge(input1,input2, on = 'id')


# In[18]:


processed_df


# In[19]:


input3 = pd.read_excel(r'D:\Backup\Padhai\Python\Join_sample.xlsx',sheet_name= 'Sheet4')


# In[20]:


processed_df = pd.merge(processed_df,input3, on = 'id')


# In[21]:


processed_df


# In[27]:


empty_df = pd.DataFrame()


# In[28]:


empty_df


# In[29]:


empty_df = pd.merge(empty_df,input2, on = 'id')


# In[25]:


empty_df


# In[31]:


a = pd.merge(input1,input1, on='id')


# In[32]:


a


# In[ ]:




